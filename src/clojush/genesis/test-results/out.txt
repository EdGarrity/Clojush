;; Connected to nREPL server - nrepl://localhost:51098
;; CIDER 0.17.0 (Andaluc a), nREPL 0.2.13
;; Clojure 1.8.0, Java 1.8.0_172
;;     Docs: (doc function-name)
;;           (find-doc part-of-name)
;;   Source: (source function-name)
;;  Javadoc: (javadoc java-object-or-class)
;;     Exit: <C-c C-q>
;;  Results: Stored in vars *1, *2, *3, an exception in *e;
;; ======================================================================
;; If you’re new to CIDER it is highly recommended to go through its
;; manual first. Type <M-x cider-view-manual> to view it.
;; In case you’re seeing any warnings you should consult the manual’s
;; "Troubleshooting" section.
;;
;; Here are few tips to get you started:
;;
;; * Press <C-h m> to see a list of the keybindings available (this
;;   will work in every Emacs buffer)
;; * Press <,> to quickly invoke some REPL command
;; * Press <C-c C-z> to switch between the REPL and a Clojure file
;; * Press <M-.> to jump to the source of something (e.g. a var, a
;;   Java method)
;; * Press <C-c C-d C-d> to view the documentation for something (e.g.
;;   a var, a Java method)
;; * Enable ‘eldoc-mode’ to display function & method signatures in the minibuffer.
;; * Print CIDER’s refcard and keep it close to your keyboard.
;;
;; CIDER is super customizable - try <M-x customize-group cider> to
;; get a feel for this. If you’re thirsty for knowledge you should try
;; <M-x cider-drink-a-sip>.
;;
;; If you think you’ve encountered a bug (or have some suggestions for
;; improvements) use <M-x cider-report-bug> to report it.
;;
;; Above all else - don’t panic! In case of an emergency - procure
;; some (hard) cider and enjoy it responsibly!
;;
;; You can remove this message with the <M-x cider-repl-clear-help-banner> command.
;; You can disable it from appearing on start by setting
;; ‘cider-repl-display-help-banner’ to nil.
;; ======================================================================
clojush.core> (-main 'clojush.genesis.genesis)
Command line args: clojush.genesis.genesis
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 100
alternation-rate = 0.1
atom-generators = (code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup ...)
csv-columns = [:generation :location :parent-uuids :genetic-operators :push-program-size :plush-genome-size :push-program :plush-genome :total-error :test-case-errors]
edn-additional-keys = [:generation :location :push-program-size :plush-genome-size]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
epigenetic-markers = []
error-function = #function[clojush.genesis.genesis/fn--15589]
error-threshold = 0.01
genetic-operator-probabilities = {:alternation 0.5, :uniform-mutation 0.5}
json-log-program-strings = true
log-fitnesses-for-all-cases = true
max-generations = 3
parent-selection = :epsilon-lexicase
population-size = 10
print-csv-logs = true
print-edn-logs = true
print-json-logs = true
uniform-mutation-constant-tweak-rate = 0.8
uniform-mutation-float-gaussian-standard-deviation = 0.1
uniform-mutation-rate = 0.1
use-single-thread = false
######################################
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop ...}
Starting PushGP run.
Clojush version = version number unavailable
Hash of last Git commit = unavailable
GitHub link = unavailable
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 100
alternation-rate = 0.1
atom-generators = (code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup ...)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :parent-uuids :genetic-operators :push-program-size :plush-genome-size :push-program :plush-genome :total-error :test-case-errors]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location :push-program-size :plush-genome-size]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #function[clojush.genesis.genesis/fn--15589]
error-threshold = 0.01
evalpush-limit = 150
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 1000
genetic-operator-probabilities = {:alternation 0.5, :uniform-mutation 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = true
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = true
maintain-ancestors = false
max-error = 1000
max-generations = 3
max-genome-size-in-initial-program = 50
max-point-evaluations = 1.0E101
max-points = 200
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :epsilon-lexicase
pop-when-tagging = true
population-size = 10
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = true
print-edn-logs = true
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = true
print-selection-counts = false
print-timings = false
problem-specific-initial-report = #function[clojush.pushgp.report/default-problem-specific-initial-report]
problem-specific-report = #function[clojush.pushgp.report/default-problem-specific-report]
random-screen = false
random-seed = 2 -67 -52 123 -119 3 69 -48 106 -38 -126 -123 -38 49 -120 -53
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 100
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.8
uniform-mutation-float-gaussian-standard-deviation = 0.1
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.1
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1755, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3841, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3989, :close 1} {:instruction string_dup_times} {:instruction boolean_not} {:instruction vector_integer_indexof} {:instruction exec_dup} {:instruction print_vector_float} {:instruction float_dup_items} {:instruction vector_boolean_last} {:instruction vector_string_dup})
Lexicase best program: ((float_fromdatatable -1755) (float_fromdatatable 3841) (float_fromdatatable 3989) string_dup_times boolean_not vector_integer_indexof exec_dup (print_vector_float float_dup_items vector_boolean_last vector_string_dup))
Lexicase best partial simplification: ()
Lexicase best errors
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 19
Percent parens: 0.263
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1755, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3841, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3989, :close 1} {:instruction string_dup_times} {:instruction boolean_not} {:instruction vector_integer_indexof} {:instruction exec_dup} {:instruction print_vector_float} {:instruction float_dup_items} {:instruction vector_boolean_last} {:instruction vector_string_dup})
Zero cases best program: ((float_fromdatatable -1755) (float_fromdatatable 3841) (float_fromdatatable 3989) string_dup_times boolean_not vector_integer_indexof exec_dup (print_vector_float float_dup_items vector_boolean_last vector_string_dup))
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 19
Percent parens: 0.263
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3975, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -497, :close 1} {:instruction vector_integer_length} {:instruction zip_pop} {:instruction vector_integer_flush} {:instruction 27} {:instruction exec_yankdup} {:instruction vector_string_concat} {:instruction string_split} {:instruction float_lte} {:instruction zip_flush} {:instruction code_fromfloat} {:instruction float_fromboolean} {:instruction exec_string_iterate} {:instruction float_shove} {:instruction genome_uniform_instruction_mutation} {:instruction boolean_shove} {:instruction code_map} {:instruction zip_empty} {:instruction environment_begin} {:instruction vector_integer_set} {:instruction vector_string_stackdepth} {:instruction code_fromfloat})
Best program: ((float_fromdatatable 3975) (float_fromdatatable -497) vector_integer_length zip_pop vector_integer_flush 27 exec_yankdup vector_string_concat string_split float_lte zip_flush code_fromfloat float_fromboolean exec_string_iterate (float_shove genome_uniform_instruction_mutation boolean_shove code_map zip_empty environment_begin vector_integer_set vector_string_stackdepth code_fromfloat))
Partial simplification: ()
Errors
Total: 1520000000000000
Mean: 1.0E12
Genome size: 27
Size: 29
Percent parens: 0.138
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case: (1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 1.0E12 ...)
Error minima by case
Average genome size in population (length): 30.7
Average program size in population (points): 32.8
Average percent parens in population: 0.222
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 10
Number of point (instruction) evaluations so far: 107856160
--- Timings ---
Current time: 1536988184705 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -153, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -55, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -4043, :close 1})
Lexicase best program: ((float_fromdatatable -153) (float_fromdatatable -55) (float_fromdatatable -4043))
Lexicase best partial simplification: ()
Lexicase best errors
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 10
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -153, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -55, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -4043, :close 1})
Zero cases best program: ((float_fromdatatable -153) (float_fromdatatable -55) (float_fromdatatable -4043))
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 10
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3557, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -981, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3523, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 481, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 729, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3885, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1173, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2043, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -837, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 77, :close 1} {:instruction print_float} {:instruction string_nth} {:instruction vector_string_set} {:instruction string_conjchar} {:instruction exec_y} {:instruction boolean_shove} {:instruction code_dup})
Best program: ((float_fromdatatable -3557) (float_fromdatatable -981) (float_fromdatatable -3523) (float_fromdatatable 481) (float_fromdatatable 729) (float_fromdatatable 3885) (float_fromdatatable -1173) (float_fromdatatable 2043) (float_fromdatatable -837) (float_fromdatatable 77) print_float string_nth vector_string_set string_conjchar exec_y (boolean_shove code_dup))
Partial simplification: ()
Errors
Total: 1520000000000000
Mean: 1.0E12
Genome size: 37
Size: 39
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case
Error minima by case
Average genome size in population (length): 44.2
Average program size in population (points): 45.9
Average percent parens in population: 0.309
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 20
Number of point (instruction) evaluations so far: 236562160
--- Timings ---
Current time: 1536999356236 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2811, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -949, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1287, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1525, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 333, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1461, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2933, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2419, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2859, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2875, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1379, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 193, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2315, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3837, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3325, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3927, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3117, :close 1} {:instruction vector_boolean_nth} {:instruction float_fromdatatable} {:instruction 3535, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1807, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 81, :close 1} {:instruction noop_open_paren} {:instruction zip_left} {:instruction -3771, :close 1} {:instruction vector_integer_eq} {:instruction vector_string_dup_times})
Lexicase best program: ((float_fromdatatable -2811) (float_fromdatatable -949) (float_fromdatatable 1287) (float_fromdatatable 1525) (float_fromdatatable 333) (float_fromdatatable 1461) (float_fromdatatable -2933) (float_fromdatatable 2419) (float_fromdatatable -2859) (float_fromdatatable -2875) (float_fromdatatable 1379) (float_fromdatatable 193) (float_fromdatatable -2315) (float_fromdatatable 3837) (float_fromdatatable 3325) (float_fromdatatable 3927) (float_fromdatatable 3117) vector_boolean_nth float_fromdatatable 3535 (float_fromdatatable -1807) (float_fromdatatable 81) (zip_left -3771) vector_integer_eq vector_string_dup_times)
Lexicase best partial simplification: ()
Lexicase best errors
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 66
Percent parens: 0.318
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2811, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -949, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1287, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1525, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 333, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1461, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2933, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2419, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2859, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2875, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1379, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 193, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2315, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3837, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3325, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3927, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3117, :close 1} {:instruction vector_boolean_nth} {:instruction float_fromdatatable} {:instruction 3535, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1807, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 81, :close 1} {:instruction noop_open_paren} {:instruction zip_left} {:instruction -3771, :close 1} {:instruction vector_integer_eq} {:instruction vector_string_dup_times})
Zero cases best program: ((float_fromdatatable -2811) (float_fromdatatable -949) (float_fromdatatable 1287) (float_fromdatatable 1525) (float_fromdatatable 333) (float_fromdatatable 1461) (float_fromdatatable -2933) (float_fromdatatable 2419) (float_fromdatatable -2859) (float_fromdatatable -2875) (float_fromdatatable 1379) (float_fromdatatable 193) (float_fromdatatable -2315) (float_fromdatatable 3837) (float_fromdatatable 3325) (float_fromdatatable 3927) (float_fromdatatable 3117) vector_boolean_nth float_fromdatatable 3535 (float_fromdatatable -1807) (float_fromdatatable 81) (zip_left -3771) vector_integer_eq vector_string_dup_times)
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 66
Percent parens: 0.318
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2059, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2375, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3611, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1605, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3851, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 183, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3087, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -815, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3093, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 4033, :close 1} {:instruction vector_boolean_swap} {:instruction float_fromdatatable} {:instruction 3463, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -233, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 174, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2890, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2369, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 19, :close 1} {:instruction zip_insert_child_fromcode} {:instruction float_fromdatatable} {:instruction -1755, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3841, :close 1} {:instruction code_do*} {:instruction float_fromdatatable} {:instruction 3989, :close 1} {:instruction string_dup_times} {:instruction string_indexofchar} {:instruction vector_integer_indexof} {:instruction char_yankdup} {:instruction exec_empty} {:instruction float_dup_items} {:instruction gtm_write_instruction} {:instruction vector_string_dup})
Best program: ((float_fromdatatable 2059) (float_fromdatatable -2375) (float_fromdatatable 3611) (float_fromdatatable -1605) (float_fromdatatable -3851) (float_fromdatatable 183) (float_fromdatatable -3087) (float_fromdatatable -815) (float_fromdatatable -3093) (float_fromdatatable 4033) vector_boolean_swap float_fromdatatable 3463 (float_fromdatatable -233) (float_fromdatatable 174) (float_fromdatatable 2890) (float_fromdatatable -2369) (float_fromdatatable 19) zip_insert_child_fromcode float_fromdatatable -1755 (float_fromdatatable 3841) code_do* float_fromdatatable 3989 string_dup_times string_indexofchar vector_integer_indexof char_yankdup exec_empty float_dup_items gtm_write_instruction vector_string_dup)
Partial simplification: ()
Errors: [1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 ...]
Total: 1520000000000000
Mean: 1.0E12
Genome size: 65
Size: 66
Percent parens: 0.258
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case
Error minima by case
Average genome size in population (length): 40.3
Average program size in population (points): 42.2
Average percent parens in population: 0.332
Minimum age in population: 0.0
Maximum age in population: 2.0
Average age in population: 1.8
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 30
Number of point (instruction) evaluations so far: 316381920
--- Timings ---
Current time: 1537010421160 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3945, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3747, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2695, :close 1} {:instruction integer_tag_exec_instruction} {:instruction float_fromdatatable} {:instruction -1263, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2875, :close 1})
Lexicase best program: ((float_fromdatatable 3945) (float_fromdatatable 3747) (float_fromdatatable -2695) integer_tag_exec_instruction float_fromdatatable -1263 (float_fromdatatable -2875))
Lexicase best partial simplification: ()
Lexicase best errors
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 16
Percent parens: 0.313
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3945, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3747, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2695, :close 1} {:instruction integer_tag_exec_instruction} {:instruction float_fromdatatable} {:instruction -1263, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2875, :close 1})
Zero cases best program: ((float_fromdatatable 3945) (float_fromdatatable 3747) (float_fromdatatable -2695) integer_tag_exec_instruction float_fromdatatable -1263 (float_fromdatatable -2875))
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 16
Percent parens: 0.313
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1451, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2971, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1213, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3785, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3557, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction vector_float_empty, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3523, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 481, :close 1} {:instruction genome_instruction_eq} {:instruction float_fromdatatable} {:instruction 729, :close 1} {:instruction print_vector_float} {:instruction float_fromdatatable} {:instruction 3885, :close 1} {:instruction noop_open_paren} {:instruction vector_integer_pop} {:instruction -1173, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2043, :close 1} {:instruction vector_integer_occurrencesof} {:instruction float_fromdatatable} {:instruction -837, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 80, :close 1} {:instruction print_float} {:instruction string_nth} {:instruction vector_string_set} {:instruction string_conjchar} {:instruction exec_y} {:instruction boolean_shove} {:instruction code_dup})
Best program: ((float_fromdatatable -1451) (float_fromdatatable -2971) (float_fromdatatable -1213) (float_fromdatatable 3785) (float_fromdatatable -3557) (float_fromdatatable vector_float_empty) (float_fromdatatable -3523) (float_fromdatatable 481) genome_instruction_eq float_fromdatatable 729 print_vector_float float_fromdatatable 3885 (vector_integer_pop -1173) (float_fromdatatable 2043) vector_integer_occurrencesof float_fromdatatable -837 (float_fromdatatable 80) print_float string_nth vector_string_set string_conjchar exec_y (boolean_shove code_dup))
Partial simplification: ()
Errors
Total: 1520000000000000
Mean: 1.0E12
Genome size: 49
Size: 51
Percent parens: 0.255
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case
Error minima by case: (1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 ...)
Average genome size in population (length): 35.3
Average program size in population (points): 37.0
Average percent parens in population: 0.313
Minimum age in population: 0.0
Maximum age in population: 3.0
Average age in population: 2.5
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 40
Number of point (instruction) evaluations so far: 395903120
--- Timings ---
Current time: 1537021535821 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
nil
Exception updating the ns-cache #error {
 :cause Task clojure.lang.Agent$Action@5db7a7cf rejected from java.util.concurrent.ThreadPoolExecutor@5633cc73[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 362]
 :via
 [{:type java.util.concurrent.RejectedExecutionException
   :message Task clojure.lang.Agent$Action@5db7a7cf rejected from java.util.concurrent.ThreadPoolExecutor@5633cc73[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 362]
   :at [java.util.concurrent.ThreadPoolExecutor$AbortPolicy rejectedExecution ThreadPoolExecutor.java 2063]}]
 :trace
 [[java.util.concurrent.ThreadPoolExecutor$AbortPolicy rejectedExecution ThreadPoolExecutor.java 2063]
  [java.util.concurrent.ThreadPoolExecutor reject ThreadPoolExecutor.java 830]
  [java.util.concurrent.ThreadPoolExecutor execute ThreadPoolExecutor.java 1379]
  [clojure.lang.Agent$Action execute Agent.java 90]
  [clojure.lang.Agent enqueue Agent.java 268]
  [clojure.lang.Agent dispatchAction Agent.java
 255]
  [clojure.lang.Agent dispatch Agent.java 241]
  [clojure.core$send_via invokeStatic core.clj 2017]
  [clojure.core$send_via doInvoke core.clj 2009]
  [clojure.lang.RestFn applyTo RestFn.java 146]
  [clojure.core$apply invokeStatic core.clj 652]
  [clojure.core$send invokeStatic core.clj 2028]
  [clojure.core$send doInvoke core.clj 2019]
  [clojure.lang.RestFn invoke RestFn.java 490]
  [cider.nrepl.middleware.track_state$make_transport$reify__15485 send track_state.clj 217]
  [clojure.tools.nrepl.middleware.pr_values$pr_values$fn$reify__10860 send pr_values.clj 27]
  [cider.nrepl.middleware.content_type$content_type_transport$reify__15726 send content_type.clj 123]
  [clojure.tools.nrepl.middleware.interruptible_eval$interruptible_eval$fn__10939$fn__10942 invoke interruptible_eval.clj 223]
  [clojure.tools.nrepl.middleware.interruptible_eval$run_next$fn__10934 invoke interruptible_eval.clj 190]
  [clojure.lang.AFn run AFn.java 22]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java
 1149]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 624]
  [java.lang.Thread run Thread.java 748]]}
clojush.core> 
