;; Connected to nREPL server - nrepl://localhost:52702
;; CIDER 0.18.0 (Saigon), nREPL 0.2.13
;; Clojure 1.8.0, Java 1.8.0_172
;;     Docs: (doc function-name)
;;           (find-doc part-of-name)
;;   Source: (source function-name)
;;  Javadoc: (javadoc java-object-or-class)
;;     Exit: <C-c C-q>
;;  Results: Stored in vars *1, *2, *3, an exception in *e;
;; ======================================================================
;; If you’re new to CIDER it is highly recommended to go through its
;; manual first. Type <M-x cider-view-manual> to view it.
;; In case you’re seeing any warnings you should consult the manual’s
;; "Troubleshooting" section.
;;
;; Here are few tips to get you started:
;;
;; * Press <C-h m> to see a list of the keybindings available (this
;;   will work in every Emacs buffer)
;; * Press <,> to quickly invoke some REPL command
;; * Press <C-c C-z> to switch between the REPL and a Clojure file
;; * Press <M-.> to jump to the source of something (e.g. a var, a
;;   Java method)
;; * Press <C-c C-d C-d> to view the documentation for something (e.g.
;;   a var, a Java method)
;; * Enable ‘eldoc-mode’ to display function & method signatures in the minibuffer.
;; * Print CIDER’s refcard and keep it close to your keyboard.
;;
;; CIDER is super customizable - try <M-x customize-group cider> to
;; get a feel for this. If you’re thirsty for knowledge you should try
;; <M-x cider-drink-a-sip>.
;;
;; If you think you’ve encountered a bug (or have some suggestions for
;; improvements) use <M-x cider-report-bug> to report it.
;;
;; Above all else - don’t panic! In case of an emergency - procure
;; some (hard) cider and enjoy it responsibly!
;;
;; You can remove this message with the <M-x cider-repl-clear-help-banner> command.
;; You can disable it from appearing on start by setting
;; ‘cider-repl-display-help-banner’ to nil.
;; ======================================================================
clojush.core> (-main 'clojush.genesis.genesis)
Command line args: clojush.genesis.genesis
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 100
alternation-rate = 0.1
atom-generators = (code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup ...)
csv-columns = [:generation :location :parent-uuids :genetic-operators :push-program-size :plush-genome-size :push-program :plush-genome :total-error :test-case-errors]
csv-log-filename = src/clojush/genesis/test-results/log.csv
edn-additional-keys = [:generation :location :push-program-size :plush-genome-size]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = src/clojush/genesis/test-results/log.edn
epigenetic-markers = []
error-function = #function[clojush.genesis.genesis/fn--13118]
error-threshold = 0.01
genetic-operator-probabilities = {:alternation 0.5, :uniform-mutation 0.5}
json-log-filename = src/clojush/genesis/test-results/log.json
json-log-program-strings = true
log-fitnesses-for-all-cases = true
max-generations = 3
parent-selection = :epsilon-lexicase
population-size = 10
print-csv-logs = true
print-edn-logs = true
print-json-logs = true
uniform-mutation-constant-tweak-rate = 0.8
uniform-mutation-float-gaussian-standard-deviation = 0.1
uniform-mutation-rate = 0.1
use-single-thread = false
######################################
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop ...}
Starting PushGP run.
Clojush version = version number unavailable
Hash of last Git commit = unavailable
GitHub link = unavailable
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 100
alternation-rate = 0.1
atom-generators = (code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup ...)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :parent-uuids :genetic-operators :push-program-size :plush-genome-size :push-program :plush-genome :total-error :test-case-errors]
csv-log-filename = src/clojush/genesis/test-results/log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location :push-program-size :plush-genome-size]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = src/clojush/genesis/test-results/log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #function[clojush.genesis.genesis/fn--13118]
error-threshold = 0.01
evalpush-limit = 150
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 1000
genetic-operator-probabilities = {:alternation 0.5, :uniform-mutation 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = src/clojush/genesis/test-results/log.json
json-log-program-strings = true
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = true
maintain-ancestors = false
max-error = 1000
max-generations = 3
max-genome-size-in-initial-program = 50
max-point-evaluations = 1.0E101
max-points = 200
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :epsilon-lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 10
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = true
print-edn-logs = true
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = true
print-selection-counts = false
print-timings = false
problem-specific-initial-report = #function[clojush.pushgp.report/default-problem-specific-initial-report]
problem-specific-report = #function[clojush.pushgp.report/default-problem-specific-report]
random-screen = false
random-seed = 88 14 -45 119 -107 19 -22 105 91 -117 19 -5 -34 32 -8 107
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 100
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.8
uniform-mutation-float-gaussian-standard-deviation = 0.1
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.1
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 643, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1733, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 349, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3403, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1021, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2693, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -489, :close 1} {:instruction string_empty} {:instruction gtm_write_instruction} {:instruction zip_append_child_fromcode} {:instruction char_yank} {:instruction exec_y} {:instruction exec_yank} {:instruction 75} {:instruction genome_uniform_close_mutation} {:instruction print_vector_float} {:instruction code_list} {:instruction char_iswhitespace} {:instruction vector_integer_conj} {:instruction string_emptystring} {:instruction boolean_or} {:instruction boolean_not} {:instruction vector_integer_length} {:instruction genome_close_inc} {:instruction vector_boolean_rest} {:instruction char_dup_times} {:instruction code_fromziprights} {:instruction zip_insert_left_fromexec} {:instruction float_mod} {:instruction vector_string_indexof} {:instruction vector_string_nth} {:instruction code_yank} {:instruction integer_fromchar} {:instruction genome_uniform_instruction_mutation} {:instruction vector_string_occurrencesof} {:instruction vector_integer_remove} {:instruction string_occurrencesofchar} {:instruction exec_rot} {:instruction zip_right} {:instruction vector_string_dup_times} {:instruction vector_integer_yank})
Lexicase best program: ((float_fromdatatable 643) (float_fromdatatable -1733) (float_fromdatatable 349) (float_fromdatatable 3403) (float_fromdatatable -1021) (float_fromdatatable -2693) (float_fromdatatable -489) string_empty gtm_write_instruction zip_append_child_fromcode char_yank exec_y (exec_yank 75 genome_uniform_close_mutation print_vector_float code_list char_iswhitespace vector_integer_conj string_emptystring boolean_or boolean_not vector_integer_length genome_close_inc vector_boolean_rest char_dup_times code_fromziprights zip_insert_left_fromexec (float_mod vector_string_indexof vector_string_nth code_yank integer_fromchar genome_uniform_instruction_mutation vector_string_occurrencesof vector_integer_remove string_occurrencesofchar exec_rot (zip_right vector_string_dup_times vector_integer_yank) () ())))
Lexicase best partial simplification: ()
Lexicase best errors: [1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 ...]
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 61
Percent parens: 0.213
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 643, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1733, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 349, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3403, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1021, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2693, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -489, :close 1} {:instruction string_empty} {:instruction gtm_write_instruction} {:instruction zip_append_child_fromcode} {:instruction char_yank} {:instruction exec_y} {:instruction exec_yank} {:instruction 75} {:instruction genome_uniform_close_mutation} {:instruction print_vector_float} {:instruction code_list} {:instruction char_iswhitespace} {:instruction vector_integer_conj} {:instruction string_emptystring} {:instruction boolean_or} {:instruction boolean_not} {:instruction vector_integer_length} {:instruction genome_close_inc} {:instruction vector_boolean_rest} {:instruction char_dup_times} {:instruction code_fromziprights} {:instruction zip_insert_left_fromexec} {:instruction float_mod} {:instruction vector_string_indexof} {:instruction vector_string_nth} {:instruction code_yank} {:instruction integer_fromchar} {:instruction genome_uniform_instruction_mutation} {:instruction vector_string_occurrencesof} {:instruction vector_integer_remove} {:instruction string_occurrencesofchar} {:instruction exec_rot} {:instruction zip_right} {:instruction vector_string_dup_times} {:instruction vector_integer_yank})
Zero cases best program: ((float_fromdatatable 643) (float_fromdatatable -1733) (float_fromdatatable 349) (float_fromdatatable 3403) (float_fromdatatable -1021) (float_fromdatatable -2693) (float_fromdatatable -489) string_empty gtm_write_instruction zip_append_child_fromcode char_yank exec_y (exec_yank 75 genome_uniform_close_mutation print_vector_float code_list char_iswhitespace vector_integer_conj string_emptystring boolean_or boolean_not vector_integer_length genome_close_inc vector_boolean_rest char_dup_times code_fromziprights zip_insert_left_fromexec (float_mod vector_string_indexof vector_string_nth code_yank integer_fromchar genome_uniform_instruction_mutation vector_string_occurrencesof vector_integer_remove string_occurrencesofchar exec_rot (zip_right vector_string_dup_times vector_integer_yank) () ())))
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 61
Percent parens: 0.213
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2315, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2269, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -365, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1855, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1039, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3937, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3273, :close 1} {:instruction gtm_dub1} {:instruction zip_dup_items} {:instruction integer_lt} {:instruction vector_boolean_rest} {:instruction float_cos} {:instruction zip_rot} {:instruction integer_div} {:instruction genome_uniform_integer_mutation} {:instruction vector_string_nth} {:instruction string_take} {:instruction float_swap} {:instruction vector_string_indexof} {:instruction exec_do*vector_boolean} {:instruction genome_gene_replace} {:instruction string_take} {:instruction string_fromboolean} {:instruction boolean_yankdup} {:instruction boolean_pop} {:instruction code_wrap} {:instruction integer_untag_instruction} {:instruction vector_integer_rot} {:instruction string_nth} {:instruction boolean_swap} {:instruction code_atom} {:instruction integer_yank} {:instruction zip_dup_times} {:instruction exec_swap} {:instruction code_fromzipchildren} {:instruction vector_string_replace} {:instruction integer_stackdepth} {:instruction zip_left} {:instruction environment_end} {:instruction string_nth} {:instruction vector_boolean_remove} {:instruction char_flush} {:instruction vector_integer_shove} {:instruction integer_shove} {:instruction code_fromziplefts} {:instruction zip_replace_fromcode} {:instruction zip_pop} {:instruction char_isdigit} {:instruction char_yank} {:instruction vector_float_replace} {:instruction vector_boolean_butlast} {:instruction float_shove} {:instruction vector_string_pushall} {:instruction vector_boolean_eq} {:instruction exec_shove} {:instruction exec_rot} {:instruction exec_do*times})
Best program: ((float_fromdatatable 2315) (float_fromdatatable 2269) (float_fromdatatable -365) (float_fromdatatable 1855) (float_fromdatatable 1039) (float_fromdatatable 3937) (float_fromdatatable -3273) gtm_dub1 zip_dup_items integer_lt vector_boolean_rest float_cos zip_rot integer_div genome_uniform_integer_mutation vector_string_nth string_take float_swap vector_string_indexof exec_do*vector_boolean (genome_gene_replace string_take string_fromboolean boolean_yankdup boolean_pop code_wrap integer_untag_instruction vector_integer_rot string_nth boolean_swap code_atom integer_yank zip_dup_times exec_swap (code_fromzipchildren vector_string_replace integer_stackdepth zip_left environment_end string_nth vector_boolean_remove char_flush vector_integer_shove integer_shove code_fromziplefts zip_replace_fromcode zip_pop char_isdigit char_yank vector_float_replace vector_boolean_butlast float_shove vector_string_pushall vector_boolean_eq exec_shove (exec_rot (exec_do*times ()) () ())) ()))
Partial simplification: ()
Errors
Total: 1520000000000000
Mean: 1.0E12
Genome size: 71
Size: 80
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case
Error minima by case
Average genome size in population (length): 41.6
Average program size in population (points): 45.0
Average percent parens in population: 0.189
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 10
Number of point (instruction) evaluations so far: 73159120
--- Timings ---
Current time: 1537059176163 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3741, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1139, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3685, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3447, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2695, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2299, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 729, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 617, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2725, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1911, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3177, :close 1} {:instruction noop_open_paren})
Lexicase best program: ((float_fromdatatable 3741) (float_fromdatatable -1139) (float_fromdatatable 3685) (float_fromdatatable -3447) (float_fromdatatable 2695) (float_fromdatatable -2299) (float_fromdatatable 729) (float_fromdatatable 617) (float_fromdatatable 2725) (float_fromdatatable -1911) (float_fromdatatable 3177) ())
Lexicase best partial simplification: ()
Lexicase best errors
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 35
Percent parens: 0.371
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3741, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1139, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3685, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3447, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2695, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2299, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 729, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 617, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2725, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1911, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3177, :close 1} {:instruction noop_open_paren})
Zero cases best program: ((float_fromdatatable 3741) (float_fromdatatable -1139) (float_fromdatatable 3685) (float_fromdatatable -3447) (float_fromdatatable 2695) (float_fromdatatable -2299) (float_fromdatatable 729) (float_fromdatatable 617) (float_fromdatatable 2725) (float_fromdatatable -1911) (float_fromdatatable 3177) ())
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 35
Percent parens: 0.371
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1219, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3211, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 371, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 781, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3137, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1013, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1239, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1951, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -671, :close 1} {:instruction boolean_dup_times} {:instruction vector_boolean_shove} {:instruction zip_shove})
Best program: ((float_fromdatatable -1219) (float_fromdatatable -3211) (float_fromdatatable 371) (float_fromdatatable 781) (float_fromdatatable 3137) (float_fromdatatable -1013) (float_fromdatatable 1239) (float_fromdatatable 1951) (float_fromdatatable -671) boolean_dup_times vector_boolean_shove zip_shove)
Partial simplification: ()
Errors: [1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 ...]
Total: 1520000000000000
Mean: 1.0E12
Genome size: 30
Size: 31
Percent parens: 0.323
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case
Error minima by case
Average genome size in population (length): 34.4
Average program size in population (points): 36.1
Average percent parens in population: 0.299
Minimum age in population: 0.0
Maximum age in population: 1.0
Average age in population: 0.7
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 20
Number of point (instruction) evaluations so far: 169679120
--- Timings ---
Current time: 1537066948183 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 659, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1715, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3895, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1497, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -181, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2737, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -735, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2813, :close 1} {:instruction noop_open_paren} {:instruction vector_integer_emptyvector} {:instruction 1663, :close 1} {:instruction vector_string_pushall} {:instruction float_fromdatatable} {:instruction 3655, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1431, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1449, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1633, :close 1} {:instruction noop_open_paren} {:instruction vector_float_first} {:instruction -2725, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2315, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2269, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -365, :close 1} {:instruction boolean_frominteger} {:instruction exec_flush} {:instruction code_dup_times} {:instruction string_indexofchar} {:instruction boolean_dup_items} {:instruction exec_y_when_autoconstructing} {:instruction genome_uniform_silence_mutation})
Lexicase best program: ((float_fromdatatable 659) (float_fromdatatable -1715) (float_fromdatatable 3895) (float_fromdatatable 1497) (float_fromdatatable -181) (float_fromdatatable -2737) (float_fromdatatable -735) (float_fromdatatable -2813) (vector_integer_emptyvector 1663) vector_string_pushall float_fromdatatable 3655 (float_fromdatatable 1431) (float_fromdatatable 1449) (float_fromdatatable -1633) (vector_float_first -2725) (float_fromdatatable 2315) (float_fromdatatable 2269) (float_fromdatatable -365) boolean_frominteger exec_flush code_dup_times string_indexofchar boolean_dup_items exec_y_when_autoconstructing (genome_uniform_silence_mutation))
Lexicase best partial simplification: ()
Lexicase best errors
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 60
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 659, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1715, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3895, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1497, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -181, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2737, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -735, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2813, :close 1} {:instruction noop_open_paren} {:instruction vector_integer_emptyvector} {:instruction 1663, :close 1} {:instruction vector_string_pushall} {:instruction float_fromdatatable} {:instruction 3655, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1431, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1449, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1633, :close 1} {:instruction noop_open_paren} {:instruction vector_float_first} {:instruction -2725, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2315, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2269, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -365, :close 1} {:instruction boolean_frominteger} {:instruction exec_flush} {:instruction code_dup_times} {:instruction string_indexofchar} {:instruction boolean_dup_items} {:instruction exec_y_when_autoconstructing} {:instruction genome_uniform_silence_mutation})
Zero cases best program: ((float_fromdatatable 659) (float_fromdatatable -1715) (float_fromdatatable 3895) (float_fromdatatable 1497) (float_fromdatatable -181) (float_fromdatatable -2737) (float_fromdatatable -735) (float_fromdatatable -2813) (vector_integer_emptyvector 1663) vector_string_pushall float_fromdatatable 3655 (float_fromdatatable 1431) (float_fromdatatable 1449) (float_fromdatatable -1633) (vector_float_first -2725) (float_fromdatatable 2315) (float_fromdatatable 2269) (float_fromdatatable -365) boolean_frominteger exec_flush code_dup_times string_indexofchar boolean_dup_items exec_y_when_autoconstructing (genome_uniform_silence_mutation))
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 60
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3929, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2225, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1835, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2975, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 481, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -2839, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1321, :close 1} {:instruction vector_boolean_nth} {:instruction code_stackdepth} {:instruction zip_flush} {:instruction print_float} {:instruction exec_y} {:instruction code_extract} {:instruction zip_append_child_fromcode} {:instruction float_eq} {:instruction gtm_erase} {:instruction vector_string_occurrencesof} {:instruction float_eq})
Best program: ((float_fromdatatable 3929) (float_fromdatatable 2225) (float_fromdatatable -1835) (float_fromdatatable 2975) (float_fromdatatable 481) (float_fromdatatable -2839) (float_fromdatatable -1321) vector_boolean_nth code_stackdepth zip_flush print_float exec_y (code_extract zip_append_child_fromcode float_eq gtm_erase vector_string_occurrencesof float_eq))
Partial simplification: ()
Errors
Total: 1520000000000000
Mean: 1.0E12
Genome size: 32
Size: 34
Percent parens: 0.265
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case
Error minima by case
Average genome size in population (length): 33.8
Average program size in population (points): 35.6
Average percent parens in population: 0.329
Minimum age in population: 0.0
Maximum age in population: 2.0
Average age in population: 1.45
Median age in population: 1.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 30
Number of point (instruction) evaluations so far: 249386400
--- Timings ---
Current time: 1537075466130 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.
Epsilons for epsilon lexicase: (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ...)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3963, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3379, :close 1} {:instruction zip_branch?} {:instruction gtm_dub1})
Lexicase best program: ((float_fromdatatable 3963) (float_fromdatatable -3379) zip_branch? gtm_dub1)
Lexicase best partial simplification: ()
Lexicase best errors
Lexicase best number of elite cases: 1520
Lexicase best total error: 1520000000000000
Lexicase best mean error: 1.0E12
Lexicase best size: 9
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3963, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3379, :close 1} {:instruction zip_branch?} {:instruction gtm_dub1})
Zero cases best program: ((float_fromdatatable 3963) (float_fromdatatable -3379) zip_branch? gtm_dub1)
Zero cases best partial simplification: ()
Zero cases best errors
Zero cases best number of elite cases: 1520
Zero cases best number of zero cases: 0
Zero cases best total error: 1520000000000000
Zero cases best mean error: 1.0E12
Zero cases best size: 9
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ...)
Population mean number of elite cases: 1520.00
Count of perfect (error zero) individuals by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -125, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1025, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -209, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1841, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3327, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2275, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 701, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3407, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 2081, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 863, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 3561, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3433, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -1347, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction 1059, :close 1} {:instruction noop_open_paren} {:instruction float_fromdatatable} {:instruction -3409, :close 1} {:instruction noop_open_paren})
Best program: ((float_fromdatatable -125) (float_fromdatatable 1025) (float_fromdatatable -209) (float_fromdatatable -1841) (float_fromdatatable -3327) (float_fromdatatable 2275) (float_fromdatatable 701) (float_fromdatatable 3407) (float_fromdatatable 2081) (float_fromdatatable 863) (float_fromdatatable 3561) (float_fromdatatable -3433) (float_fromdatatable -1347) (float_fromdatatable 1059) (float_fromdatatable -3409) ())
Partial simplification: ()
Errors
Total: 1520000000000000
Mean: 1.0E12
Genome size: 46
Size: 47
Percent parens: 0.362
--- Population Statistics ---
Average total errors in population: 1.52E15
Median total errors in population: 1520000000000000
Error averages by case
Error minima by case
Average genome size in population (length): 34.8
Average program size in population (points): 36.0
Average percent parens in population: 0.357
Minimum age in population: 2.0
Maximum age in population: 3.0
Average age in population: 2.6
Median age in population: 2.625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
--- Run Statistics ---
Number of program evaluations used so far: 40
Number of point (instruction) evaluations so far: 338570880
--- Timings ---
Current time: 1537083807659 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
nil
Exception updating the ns-cache #error {
 :cause Task clojure.lang.Agent$Action@2aae4d68 rejected from java.util.concurrent.ThreadPoolExecutor@260dfff[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 364]
 :via
 [{:type java.util.concurrent.RejectedExecutionException
   :message Task clojure.lang.Agent$Action@2aae4d68 rejected from java.util.concurrent.ThreadPoolExecutor@260dfff[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 364]
   :at [java.util.concurrent.ThreadPoolExecutor$AbortPolicy rejectedExecution ThreadPoolExecutor.java 2063]}]
 :trace
 [[java.util.concurrent.ThreadPoolExecutor$AbortPolicy rejectedExecution ThreadPoolExecutor.java 2063]
  [java.util.concurrent.ThreadPoolExecutor reject ThreadPoolExecutor.java 830]
  [java.util.concurrent.ThreadPoolExecutor execute ThreadPoolExecutor.java 1379]
  [clojure.lang.Agent$Action execute Agent.java 90]
  [clojure.lang.Agent enqueue Agent.java 268]
  [clojure.lang.Agent dispatchAction Agent.java
 255]
  [clojure.lang.Agent dispatch Agent.java 241]
  [clojure.core$send_via invokeStatic core.clj 2017]
  [clojure.core$send_via doInvoke core.clj 2009]
  [clojure.lang.RestFn applyTo RestFn.java 146]
  [clojure.core$apply invokeStatic core.clj 652]
  [clojure.core$send invokeStatic core.clj 2028]
  [clojure.core$send doInvoke core.clj 2019]
  [clojure.lang.RestFn invoke RestFn.java 490]
  [cider.nrepl.middleware.track_state$make_transport$reify__12733 send track_state.clj 226]
  [clojure.tools.nrepl.middleware.interruptible_eval$interruptible_eval$fn__8220$fn__8223 invoke interruptible_eval.clj 223]
  [clojure.tools.nrepl.middleware.interruptible_eval$run_next$fn__8215 invoke interruptible_eval.clj 190]
  [clojure.lang.AFn run AFn.java 22]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1149]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 624]
  [java.lang.Thread run Thread.java 748]]}
clojush.core> 
